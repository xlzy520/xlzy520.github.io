(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{614:function(t,e,r){"use strict";r.r(e);var s=r(22),o=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("背景\n1 #239669 批量新建工作项界面，上下、左右滚动，发现界面卡住了，影响用户正常使用（详情见附件录屏）\n2 需要紧急修复")]),t._v(" "),r("p",[t._v("结论\n批量新建造成性能的原因")]),t._v(" "),r("p",[t._v("1【大头】不合理的使用 FetchProductsHOC，从而引发高频调用性能不好的GraphQLSelector.getQueryDataByUid，从而造成性能问题。\n2 每个单元格使用的 PublishVersionSelect 没有做防止重复请求\n3 产品字段&产品模块字段频繁发起请求。")]),t._v(" "),r("p",[t._v("修复代码见 ones-ai-web-common hotfix_20210810，只修复大头问题1。")]),t._v(" "),r("p",[t._v("可沉淀的思考")]),t._v(" "),r("p",[t._v("分析性能的两大杀器（1 了解业务代码；2 Performance 分析性能卡点；）\n缓存也可从 store 的 reduce 和 selector 下手。\n过程\n存在性能问题，那么就可以通过录制 Performance。从 performance 中看出大量的消耗在 getQueryDataByUid")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://i0.hdslb.com/bfs/album/d71e95317909a15a45c7a2b4eaa6ed1c0a8cf6cb.png",alt:""}})]),t._v(" "),r("p",[t._v("const mapStateToProps = () => {\n// something")]),t._v(" "),r("p",[t._v("return (state, ownProps) => {\nconst { useExternalProducts, products: externalProducts } = ownProps;\nif (useExternalProducts) return { products: externalProducts };")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[t._v("const productsFromQuery = GraphQLSelector.getQueryDataByUid(state, ProductDataKey);\nconst productsWithoutPermission = productsFromQuery ? productsFromQuery.products : [];\n\nreturn {\n  permissionRules: getPermissionRules(productsWithoutPermission),\n  productFields: sortByProductFields(ItemSelector.getGlobalProductFields(state)),\n  products: getProducts(state, productsWithoutPermission),\n};\n")])])]),r("p",[t._v("};\n}")]),t._v(" "),r("p",[t._v("那么问题来了：怎么减少 getQueryDataByUid 的调用？")]),t._v(" "),r("p",[t._v("1 createSelector ？\n没用。\n2 减少 FetchProductsHOC 的不合理使用?\n成本太多，需要了解业务才能修复。但是更合理的方案。\n3 减少 getQueryDataByUid 计算时间。")]),t._v(" "),r("p",[t._v("最后交付紧急原因采用了修复成本很低的 3 方案。")]),t._v(" "),r("p",[t._v("具体方案是\n方案")]),t._v(" "),r("ul",[r("li",[t._v("解决核心性能，增加 graphql store 缓存，规避耗时运算。")])]),t._v(" "),r("p",[t._v("改动")]),t._v(" "),r("ul",[r("li",[t._v("缓存加到通用层 graphql 数据存储。\n影响范围")]),t._v(" "),r("li",[t._v("批量新建")]),t._v(" "),r("li",[t._v("和全局 graphql 数据相关的。\n"),r("ul",[r("li",[t._v("建议缩小测试范围到 产品模块and项目列表 的 CRUD\n风险")])])]),t._v(" "),r("li",[t._v("无")])])])}),[],!1,null,null,null);e.default=o.exports}}]);